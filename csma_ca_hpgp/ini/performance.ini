# HPGP Performance Testing Configuration
# Configurations optimized for performance measurement and benchmarking

[Config BenchmarkBase]
description = "Base configuration for performance benchmarking"

# Disable unnecessary features for performance
record-eventlog = false
**.cmdenv-log-level = WARN
**.log-level = ERROR

# Optimize simulation performance
cmdenv-express-mode = true
cmdenv-performance-display = true
cmdenv-status-frequency = 30s

# Consistent random seed for reproducibility
seed-set = 12345

[Config ThroughputTest]
extends = BenchmarkBase
description = "Throughput testing with high message rates"

# High frequency SLAC procedures
**.node[*].app[0].slacStartInterval = exponential(5s)  # Average 5s between SLAC attempts

# Record throughput metrics
**.slacThroughput.statistic-recording = true
**.messagesSent.statistic-recording = true
**.messagesReceived.statistic-recording = true

[Config LatencyTest]  
extends = BenchmarkBase
description = "Latency testing with precise timing measurements"

# Focus on latency metrics
**.slacCompletionTime.statistic-recording = true
**.slacCompletionTime.result-recording-modes = all

# High precision timing
simtime-resolution = ps

# Optimized for minimum latency
**.node[*].app[0].slacMsgTimeout = 0.1s
**.node[*].app[0].slacRetryBackoff = 0.05s

[Config ScalabilityTest]
extends = BenchmarkBase  
description = "Scalability testing with increasing node counts"

# Progressive node count testing
*.numNodes = ${nodeCount = 10, 20, 50, 100, 200, 500}

# Extended simulation time for large networks
sim-time-limit = 120s

# Memory-optimized settings
**.node[*].app[0].slacCompletionTime.result-recording-modes = scalar

[Config ReliabilityTest]
extends = BenchmarkBase
description = "Reliability testing under adverse conditions"

# Add random failures
**.node[*].app[0].failureProbability = 0.1  # 10% random failure rate

# Variable delay injection
**.node[*].app[0].processingDelay = uniform(0, 0.1)s

# Record failure statistics
**.slacFailures.statistic-recording = true
**.slacTimeouts.statistic-recording = true

[Config ConcurrencyTest]
extends = BenchmarkBase
description = "Concurrency testing with simultaneous SLAC procedures"

# Force simultaneous starts
**.node[*].app[0].startTime = 0s  # All nodes start SLAC at same time

# Multiple EVSE nodes for concurrent testing
**.node[0..${numNodes/2-1}].app[0].nodeType = "EVSE"
**.node[${numNodes/2}..].app[0].nodeType = "EV"

# Record concurrency metrics
**.concurrentSlacCount.statistic-recording = true
**.resourceContention.statistic-recording = true

[Config LongRunTest]
extends = BenchmarkBase
description = "Long duration testing for stability analysis"

# Extended simulation time
sim-time-limit = 3600s  # 1 hour

# Periodic SLAC procedures
**.node[*].app[0].slacStartInterval = exponential(300s)  # Average 5 minutes

# Memory-efficient recording
**.node[*].app[0].*.result-recording-modes = scalar
record-eventlog = false

[Config MemoryTest]
extends = BenchmarkBase
description = "Memory usage testing for large simulations"

# Very large network
*.numNodes = 1000

# Minimal recording to test pure memory usage
**.*.result-recording-modes = -
record-eventlog = false

# Reduced logging
**.cmdenv-log-level = OFF
**.log-level = OFF
