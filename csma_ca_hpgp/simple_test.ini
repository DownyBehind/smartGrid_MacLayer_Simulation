# HPGP SLAC Simulation - Simple Test Based on simulator_simpleAndQuick
# This configuration replicates the Python simulator for OMNET++

[General]
network = HpgpNetwork
sim-time-limit = 10s  # Same as simulator_simpleAndQuick default

# Reproducible results
seed-set = 12345

# Result collection
output-vector-file = results/slac-simple-${runnumber}.vec
output-scalar-file = results/slac-simple-${runnumber}.sca

# Logging
**.cmdenv-log-level = INFO

[Config SimpleSlacTest]
description = "Simple SLAC test with 3 nodes (1 EVSE + 2 EVs)"

# Network parameters
*.numNodes = 3

# Node 0 is EVSE, nodes 1-2 are EVs (same as simulator_simpleAndQuick)
**.node[0].app[0].nodeType = "EVSE"
**.node[0].app[0].nodeId = 0

**.node[1..].app[0].nodeType = "EV"
**.node[*].app[0].nodeId = index

# SLAC timing parameters from simulator_simpleAndQuick defaults.json
**.node[*].app[0].localPort = 8999
**.node[*].app[0].destPort = 8999
**.node[*].app[0].slacMsgTimeout = 2.0s      # V2G_EVCC_Msg_Timeout_ms
**.node[*].app[0].slacProcTimeout = 60.0s    # TT_EV_SLAC_matching_ms
**.node[*].app[0].slacMaxRetry = 3           # SLAC_MAX_RETRY
**.node[*].app[0].slacRetryBackoff = 0.15s   # SLAC_RETRY_BACKOFF_us

# Wireless configuration (representing PLC shared bus)
**.node[*].wlan[0].typename = "Ieee80211Interface"
**.node[*].wlan[0].mgmt.typename = "Ieee80211MgmtAdhoc"
**.node[*].wlan[0].agent.typename = ""

# All nodes use the same channel (shared medium like PLC)
**.node[*].wlan[0].radio.channelNumber = 1
**.node[*].wlan[0].radio.transmitter.power = 20mW

# IP configuration
**.node[*].ipv4.configurator.networkAddress = "192.168.1.0"

# Statistics recording for analysis like simulator_simpleAndQuick
**.slacCompletionTime.statistic-recording = true
**.slacRetryCount.statistic-recording = true
**.slacTimeout.statistic-recording = true

# Enable detailed vector recording for timeline analysis
**.node[*].app[0].slacCompletionTime.result-recording-modes = all
