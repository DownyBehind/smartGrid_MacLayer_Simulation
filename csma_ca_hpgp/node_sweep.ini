# HPGP SLAC Simulation - Node Sweep Configuration
# Replicates simulator_simpleAndQuick sweep from 5 to 100 nodes
# Based on defaults.json configuration

[General]
network = HpgpNetwork
sim-time-limit = 10s  # Same as simulator_simpleAndQuick

# Multiple seeds for statistical reliability
seed-set = ${seed=0..9}

# Result collection
output-vector-file = results/${configname}-N${numNodes}-${seed}.vec
output-scalar-file = results/${configname}-N${numNodes}-${seed}.sca
record-eventlog = false

# Performance optimization
cmdenv-express-mode = true
cmdenv-performance-display = true
cmdenv-status-frequency = 10s

# Logging
**.cmdenv-log-level = WARN

[Config NodeSweepBase]
description = "Base configuration for node sweep experiments"

# Variable number of nodes (5 to 100 in steps of 5)
*.numNodes = ${numNodes = 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100}

# Node 0 is always EVSE, others are EVs
**.node[0].app[0].nodeType = "EVSE"
**.node[0].app[0].nodeId = 0

**.node[1..].app[0].nodeType = "EV" 
**.node[*].app[0].nodeId = index

# HPGP/IEEE1901 MAC parameters from simulator_simpleAndQuick defaults.json
**.node[*].app[0].localPort = 8999
**.node[*].app[0].destPort = 8999

# SLAC timing parameters (from traffic.slac_timers)
**.node[*].app[0].slacMsgTimeout = 2.0s      # V2G_EVCC_Msg_Timeout_ms
**.node[*].app[0].slacProcTimeout = 60.0s    # TT_EV_SLAC_matching_ms  
**.node[*].app[0].slacMaxRetry = 3           # SLAC_MAX_RETRY
**.node[*].app[0].slacRetryBackoff = 0.15s   # SLAC_RETRY_BACKOFF_us

# IEEE 802.11 configuration (representing HPGP PLC shared bus)
**.node[*].wlan[0].typename = "Ieee80211Interface"
**.node[*].wlan[0].mgmt.typename = "Ieee80211MgmtAdhoc"
**.node[*].wlan[0].agent.typename = ""

# HPGP MAC timing parameters (from mac.timing)
**.node[*].wlan[0].mac.typename = "Ieee80211Mac"
**.node[*].wlan[0].mac.dcf.slotTime = 36us           # sigma_us
**.node[*].wlan[0].mac.dcf.sifs = 36us               # cifs_us
**.node[*].wlan[0].mac.dcf.cwMin = 16                # W0
**.node[*].wlan[0].mac.dcf.cwMax = 1024              # CWmax
**.node[*].wlan[0].mac.dcf.retryLimit = 7            # retry_limit

# PHY parameters (from mac.phy_bps)
**.node[*].wlan[0].radio.typename = "Ieee80211ScalarRadio"
**.node[*].wlan[0].radio.transmitter.power = 20mW
**.node[*].wlan[0].radio.transmitter.bitrate = 14Mbps  # phy_bps
**.node[*].wlan[0].radio.receiver.sensitivity = -85dBm

# All nodes use the same channel (shared bus topology)
**.node[*].wlan[0].radio.channelNumber = 1

# Radio medium configuration
*.radioMedium.backgroundNoise.power = -100dBm

# IP configuration
**.configurator.config = xml("<config><interface hosts='**' address='192.168.1.x' netmask='255.255.255.0'/></config>")

# Statistics collection (matching simulator_simpleAndQuick metrics)
**.slacCompletionTime.statistic-recording = true
**.slacRetryCount.statistic-recording = true  
**.slacTimeout.statistic-recording = true

# Vector recording for detailed analysis
**.node[*].app[0].slacCompletionTime.result-recording-modes = all
**.node[*].app[0].slacRetryCount.result-recording-modes = all

# MAC layer statistics for efficiency analysis
**.node[*].wlan[0].mac.**.statistic-recording = true
**.node[*].wlan[0].radio.**.statistic-recording = true

[Config NodeSweep]
extends = NodeSweepBase
description = "Node sweep simulation from 5 to 100 nodes"

# Run with multiple seeds for statistical significance
repeat = 10

[Config NodeSweepSingle]
extends = NodeSweepBase  
description = "Single run node sweep for testing"

# Single seed for quick testing
seed-set = 0
